{"version":3,"sources":["../node_modules/react-router-hash-link/lib/index.js","components/CodeExample.js","pages/Home/sections.js","images/example_button.png","images/colors_sketch.png","images/input_metrics.png","pages/Guides/GettingStarted.js","pages/Guides/Styling.js","pages/Guides/BestPractices.js","pages/Guides/Theming.js","pages/Guides/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","genericHashLink","HashLink","NavHashLink","_react2","_interopRequireDefault","__webpack_require__","_propTypes2","_reactRouterDom","__esModule","default","hashFragment","observer","asyncTimerId","scrollFunction","reset","disconnect","window","clearTimeout","getElAndScroll","element","document","getElementById","props","As","scroll","smooth","filteredProps","keys","indexOf","_objectWithoutProperties","createElement","onClick","e","to","split","slice","join","hash","replace","el","scrollIntoView","behavior","setTimeout","MutationObserver","observe","attributes","childList","subtree","children","Link","NavLink","propTypes","func","node","oneOfType","string","object","react_syntax_highlighter_dist_prism__WEBPACK_IMPORTED_MODULE_0__","react_syntax_highlighter_dist_prism__WEBPACK_IMPORTED_MODULE_0___default","n","react_syntax_highlighter_dist_styles_prism__WEBPACK_IMPORTED_MODULE_1__","cabana_react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","CodeExample","a","boxShadow","flex","customStyle","fontSize","margin","style","tomorrow","language","ListItem","react__WEBPACK_IMPORTED_MODULE_1___default","cabana_react__WEBPACK_IMPORTED_MODULE_3__","color","is","GradientBg","styled","Gradient","_templateObject","StyledCard","Card","_templateObject2","StyledLink","_templateObject3","BlogPostCard","m","borderColor","src","imageSrc","fontWeight","textDecoration","href","title","cabana_react_build_components_Card__WEBPACK_IMPORTED_MODULE_9__","Intro","Fragment","width","height","_components_Section__WEBPACK_IMPORTED_MODULE_7__","alignItems","display","flexDirection","justifyContent","mt","letterSpacing","maxWidth","my","textAlign","mb","bg","mr","border","flexWrap","require","_components_CodeExample__WEBPACK_IMPORTED_MODULE_8__","cabanaico__WEBPACK_IMPORTED_MODULE_4__","WhyCabana","pb","_components_Logo__WEBPACK_IMPORTED_MODULE_10__","verticalAlign","MoreExamples","py","mx","BlogPosts","Install","GetStarted","Story","module","p","GettingStarted","react_default","Section","id","sections","build","showLineNumbers","lib","ml","Styling","ButtonPrimary","AdBox","Callout","px","borderRadius","BestPractices","placeholder","BestPractices_Callout","BestPractices_AdBox","BestPractices_ButtonPrimary","gridTemplateColumns","gridColumnGap","Theming","TopNavItem","Box","defaultProps","url","name","Guides","gridRowGap","map","item","concat"],"mappings":"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","file":"static/js/4.49031f05.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.genericHashLink = genericHashLink;\nexports.HashLink = HashLink;\nexports.NavHashLink = NavHashLink;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRouterDom = require('react-router-dom');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar hashFragment = '';\nvar observer = null;\nvar asyncTimerId = null;\nvar scrollFunction = null;\n\nfunction reset() {\n  hashFragment = '';\n  if (observer !== null) observer.disconnect();\n\n  if (asyncTimerId !== null) {\n    window.clearTimeout(asyncTimerId);\n    asyncTimerId = null;\n  }\n}\n\nfunction getElAndScroll() {\n  var element = document.getElementById(hashFragment);\n\n  if (element !== null) {\n    scrollFunction(element);\n    reset();\n    return true;\n  }\n\n  return false;\n}\n\nfunction hashLinkScroll() {\n  // Push onto callback queue so it runs after the DOM is updated\n  window.setTimeout(function () {\n    if (getElAndScroll() === false) {\n      if (observer === null) {\n        observer = new MutationObserver(getElAndScroll);\n      }\n\n      observer.observe(document, {\n        attributes: true,\n        childList: true,\n        subtree: true\n      }); // if the element doesn't show up in 10 seconds, stop checking\n\n      asyncTimerId = window.setTimeout(function () {\n        reset();\n      }, 10000);\n    }\n  }, 0);\n}\n\nfunction genericHashLink(props, As) {\n  function handleClick(e) {\n    reset();\n    if (props.onClick) props.onClick(e);\n\n    if (typeof props.to === 'string') {\n      hashFragment = props.to.split('#').slice(1).join('#');\n    } else if (_typeof(props.to) === 'object' && typeof props.to.hash === 'string') {\n      hashFragment = props.to.hash.replace('#', '');\n    }\n\n    if (hashFragment !== '') {\n      scrollFunction = props.scroll || function (el) {\n        return props.smooth ? el.scrollIntoView({\n          behavior: \"smooth\"\n        }) : el.scrollIntoView();\n      };\n\n      hashLinkScroll();\n    }\n  }\n\n  var scroll = props.scroll,\n      smooth = props.smooth,\n      filteredProps = _objectWithoutProperties(props, ['scroll', 'smooth']);\n\n  return _react2.default.createElement(As, _extends({}, filteredProps, {\n    onClick: handleClick\n  }), props.children);\n}\n\nfunction HashLink(props) {\n  return genericHashLink(props, _reactRouterDom.Link);\n}\n\nfunction NavHashLink(props) {\n  return genericHashLink(props, _reactRouterDom.NavLink);\n}\n\nvar propTypes = {\n  onClick: _propTypes2.default.func,\n  children: _propTypes2.default.node,\n  scroll: _propTypes2.default.func,\n  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])\n};\nHashLink.propTypes = propTypes;\nNavHashLink.propTypes = propTypes;","import SyntaxHighLighter from 'react-syntax-highlighter/dist/prism';\nimport { tomorrow } from 'react-syntax-highlighter/dist/styles/prism';\nimport { Box } from 'cabana-react';\nimport React from 'react';\n\nconst CodeExample = props => (\n  <Box boxShadow={100} flex={1}>\n    <SyntaxHighLighter\n      customStyle={{ fontSize: '12px', margin: 0 }}\n      style={tomorrow}\n      language=\"javascript\"\n      {...props}\n    />\n  </Box>\n);\n\nexport default CodeExample;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  CardTitle,\n  CardImage,\n  HeadingOne,\n  HeadingThree,\n  BodyText,\n  TextPrimitive,\n  HeadingFour,\n  Button,\n} from 'cabana-react';\nimport { IconHeart } from 'cabanaico';\nimport { Gradient } from '../../components/Svg';\nimport styled from 'styled-components';\nimport Section, { SectionGrid, TextLink, SectionHeading, SubHeading } from '../../components/Section';\nimport CodeExample from '../../components/CodeExample';\nimport { CardBodyText } from 'cabana-react/build/components/Card';\nimport Logo from '../../components/Logo';\n\nconst ListItem = props => <TextPrimitive color=\"inherit\" is=\"li\" {...props} />;\n\nconst GradientBg = styled(Gradient)`\n  transform: scaleY(-1);\n  width: 100%;\n  vertical-align: bottom;\n`;\n\nconst StyledCard = styled(Card)`\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst BlogPostCard = props => (\n  <StyledCard m={2} borderColor=\"transparent\">\n    <CardImage\n      src={props.imageSrc || 'https://media-cdn.tripadvisor.com/media/photo-s/0f/d6/9f/af/sunscape-dominican-beach.jpg'}\n    />\n    <CardTitle fontWeight=\"normal\" is=\"a\" textDecoration=\"none\" href={props.href} target=\"_blank\">\n      {props.title}\n    </CardTitle>\n    <CardBodyText>5 min read</CardBodyText>\n  </StyledCard>\n);\nconst Intro = () => (\n  <React.Fragment>\n    <Box width=\"100%\" height=\"100%\">\n      <GradientBg />\n    </Box>\n    <Section\n      alignItems=\"center\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      // height=\"calc(100vh - 362px)\"\n      mt={-12}\n    >\n      <HeadingOne\n        color=\"darkGrey\"\n        fontSize={['h2', 'h1']}\n        fontWeight=\"bold\"\n        letterSpacing=\"-0.05em\"\n        maxWidth={680}\n        my={8}\n        textAlign=\"center\"\n      >\n        A design system built especially for <span style={{ textDecoration: 'underline' }}>both</span> Sketch and React.\n      </HeadingOne>\n      <BodyText textAlign=\"center\" mb={4}>\n        Built with{' '}\n        <TextLink is=\"a\" href=\"http://reactjs.com\">\n          React,\n        </TextLink>{' '}\n        <TextLink is=\"a\" href=\"https://www.styled-components.com\">\n          styled-components\n        </TextLink>{' '}\n        and <TextLink href=\"https://github.com/jxnblk/styled-system\">styled-system</TextLink>.\n      </BodyText>\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Button\n          is=\"a\"\n          href=\"https://github.com/lucastobrazil/cabana-react\"\n          bg=\"primary\"\n          color=\"white\"\n          display=\"block\"\n          mr={2}\n        >\n          GitHub\n        </Button>\n        <Button bg=\"white\" color=\"primary\" display=\"block\" border=\"1px solid\" borderColor=\"primary\">\n          <StyledLink to=\"/guides\">Guides</StyledLink>\n        </Button>\n      </Box>\n    </Section>\n    <Section>\n      <Box display=\"flex\" flexWrap={['wrap', 'nowrap']}>\n        <SectionGrid>\n          <HeadingFour textAlign=\"center\" mt={0}>\n            Sketch\n          </HeadingFour>\n          <ul>\n            <ListItem>Symbol overrides allow you to select pre-set layer styles etc.</ListItem>\n            <ListItem>Full control over content / iconography etc.</ListItem>\n          </ul>\n          <img style={{ maxWidth: '100%' }} src={require('../../images/example_button.png')} />\n        </SectionGrid>\n        <SectionGrid>\n          <HeadingFour textAlign=\"center\" mt={0}>\n            React\n          </HeadingFour>\n          <ul>\n            <ListItem>Import named components that match the Sketch symbols.</ListItem>\n            <ListItem>Create instances for your app.</ListItem>\n          </ul>\n          <CodeExample>\n            {`\n// Reads from theme.js file\nconst MyButton = (\n    <Button \n        color=\"white\" \n        borderRadius=\"large\"\n        bg=\"primary\" \n        fontWeight=\"bold\" \n    >\n        <IconHeart /> Like\n    </Button>\n);\n        `}\n          </CodeExample>\n          <Button bg=\"primary\" color=\"white\" mt={1}>\n            <IconHeart /> Like\n          </Button>\n        </SectionGrid>\n      </Box>\n    </Section>\n  </React.Fragment>\n);\n\nconst WhyCabana = () => (\n  <Box bg=\"#fafafa\" pb={3} display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n    <SectionHeading mt={0} textAlign=\"center\" flex=\"0 0 100%\">\n      <Logo width={60} height={60} style={{ verticalAlign: 'middle' }}/>{' '}\n      Why Cabana?\n    </SectionHeading>\n    <Section display=\"flex\" flexWrap={['wrap', 'nowrap']}>\n      <SectionGrid>\n        <HeadingThree>For Designers</HeadingThree>\n        <ul>\n          <ListItem>Sketch Library with powerful customisation</ListItem>\n          <ListItem>Flexible visual style, whilst also keeping design system ‘rules’ under control</ListItem>\n        </ul>\n      </SectionGrid>\n      <SectionGrid>\n        <HeadingThree>For Developers</HeadingThree>\n        <ul>\n          <ListItem>Build your own React components or use the default</ListItem>\n          <ListItem>Works out of the box</ListItem>\n          <ListItem>Flexible and Composable</ListItem>\n        </ul>\n      </SectionGrid>\n    </Section>\n  </Box>\n);\n\nconst MoreExamples = () => (\n  <Box bg=\"#fafafa\" py={3}>\n    <SectionHeading textAlign=\"center\">Sketch Library and Theme</SectionHeading>\n    <Section display=\"flex\" flexWrap={['wrap', 'nowrap']}>\n      <SectionGrid>\n        <HeadingThree mb={1}>Sketch Layer Styles</HeadingThree>\n        <img style={{ maxWidth: 300 }} src={require('../../images/colors_sketch.png')} />\n      </SectionGrid>\n      <SectionGrid>\n        <HeadingThree mb={1}>Theme JS object</HeadingThree>\n        <CodeExample>\n          {`\nconst theme = {\n    colors: {\n        primary: '#5450F7',\n        secondary: '#25a9ce',\n        tertiary: '#EF476F',\n        black: '#303133',\n        grey: '#8D8D8F',\n        LightGrey: '#DADADA',\n        success: '#44A45F',\n        warning: '#FCEB3B',\n        error: '#E6173E',\n    }   \n};\n        `}\n        </CodeExample>\n      </SectionGrid>\n    </Section>\n    <Button bg=\"primary\" color=\"white\" display=\"block\" my={8} mx=\"auto\">\n      <StyledLink to=\"/guides\">Check out the guides</StyledLink>\n    </Button>\n  </Box>\n);\n\nconst BlogPosts = () => (\n  <Box bg=\"tertiary\">\n    <Section>\n      <SubHeading mb={2} textAlign=\"center\" color=\"white\">\n        Relevant Blog Posts\n      </SubHeading>\n      <Box display=\"flex\">\n        <BlogPostCard title=\"Introducing Cabana for React\" imageSrc=\"\" />\n        <BlogPostCard\n          title=\"Patterns for Style Composition in React\"\n          imageSrc=\"\"\n          href=\"http://jxnblk.com/writing/posts/patterns-for-style-composition-in-react/\"\n        />\n        <BlogPostCard title=\"Introducing Cabana for React\" imageSrc=\"\" />\n      </Box>\n    </Section>\n  </Box>\n);\n\nconst Install = () => <CodeExample>{`npm install --save cabana-react`}</CodeExample>;\n\nconst GetStarted = () => (\n  <Box py={4}>\n    <SectionHeading textAlign=\"center\">Get Started</SectionHeading>\n    <Section display=\"flex\" flexWrap={['wrap', 'nowrap']}>\n      <SectionGrid>\n        <HeadingThree mb={1}>Sketch</HeadingThree>\n        <TextLink href=\"https://cabanadesignsystem.com/\">Check out the Sketch Library</TextLink>\n      </SectionGrid>\n      <SectionGrid>\n        <HeadingThree mb={1}>React</HeadingThree>\n        <Install />\n        <StyledLink to=\"/guides\" mt={2} color=\"primary\">\n          Getting started guide\n        </StyledLink>\n      </SectionGrid>\n    </Section>\n  </Box>\n);\n\nconst Story = () => (\n  <Section>\n    <SectionHeading textAlign=\"center\">Concept</SectionHeading>\n    <BodyText mb={1}>\n      At its heart, Cabana is a powerful Sketch-driven design system. It utilises some of Sketch's core features like\n      symbols, layer and text styles, overrides and libraries to deliver a user-friendly, maintainable design system\n      that speeds up your process - especially when starting a completely new project.\n    </BodyText>\n    <BodyText>\n      Before Cabana-React - your designs had no clear way of being translated into code. Cabana React is basically the\n      React equivalent of the Cabana Sketch Library, and they are intended to work together... just like designers and\n      developers 😇\n    </BodyText>\n  </Section>\n);\n\nexport { Intro, MoreExamples, BlogPosts, Story, GetStarted, Install, WhyCabana };\n","module.exports = __webpack_public_path__ + \"static/media/example_button.8d33e5f6.png\";","module.exports = __webpack_public_path__ + \"static/media/colors_sketch.0da5a5fd.png\";","module.exports = __webpack_public_path__ + \"static/media/input_metrics.e97a07e6.png\";","import React from 'react';\nimport { Box, BodyText, Card, CardTitle, CardImage, Button } from 'cabana-react';\nimport { Install } from '../Home/sections';\nimport CodeExample from '../../components/CodeExample';\nimport Section, { SectionHeading, SubHeading, Code } from '../../components/Section';\nimport { HashLink as Link } from 'react-router-hash-link';\nexport default function GettingStarted(props) {\n  return (\n    <Section id={props.title}>\n      <SectionHeading>Getting Started</SectionHeading>\n      <SubHeading>Install</SubHeading>\n      <Install />\n      <BodyText mt={2}>Now you're good to go! 🎉</BodyText>\n      <SubHeading>Your first Cabana component</SubHeading>\n      <Box mb={4}>\n        <CodeExample mr={2} showLineNumbers>{`import { ThemeProvider } from 'styled-components';\nimport { Button } from 'cabana-react';\nimport myTheme from './theme.js';\n\nconst App = () => (\n    <ThemeProvider theme={myTheme}>\n        <Button bg=\"primary\" color=\"white\">Hi!</Button>\n    </ThemeProvider>\n);`}</CodeExample>\n        <Button mt={1} bg=\"primary\" color=\"white\">\n          Hi!\n        </Button>\n      </Box>\n      <BodyText is=\"span\">\n        What's happening?\n        <ol>\n          <li>\n            We're importing our <Code>Button</Code> component from the <Code>cabana-react</Code> library and the{' '}\n            <Code>ThemeProvider</Code> from styled-components to apply our <Link to=\"#Theming\">theme</Link>.\n          </li>\n          <li>\n            Creating an instance of the <Code>Button</Code> component\n          </li>\n          <li>Configuring the background and text color. It's up to you how many props you customise.</li>\n        </ol>\n      </BodyText>\n      <SubHeading mt={3}>Let's try another one</SubHeading>\n      <Box display=\"flex\" alignItems=\"flex-start\" mb={4}>\n        <CodeExample showLineNumbers>{`import { Card, CardTitle, CardImage } from 'cabana-react';\n\nconst imageUrl = \"https://tinyurl.com/yc9dz9xu\";\nconst App = () => (\n    <Card \n        is=\"article\" \n        textAlign=\"center\"\n        boxShadow={60} // defined in theme.js\n    >\n        <CardImage src={imageUrl} />\n        <CardTitle>Spacious Cabana!</CardTitle>\n    </Card>\n);`}</CodeExample>\n        <Card is=\"article\" textAlign=\"center\" ml={2} boxShadow={60}>\n          <CardImage src=\"https://tinyurl.com/yc9dz9xu\" />\n          <CardTitle>Spacious Cabana!</CardTitle>\n        </Card>\n      </Box>\n      <BodyText is=\"span\">\n        What's happening?\n        <ol>\n          <li>\n            Creating an instance of the <Code>Card</Code> component and its children\n          </li>\n          <li>\n            Configuring the HTML element type using the <Code>is</Code> prop, the text alignment and the box shadow.\n            It's up to you how many props you customise - the cool thing about react-cabana is that all components come\n            pre-styled too!\n          </li>\n        </ol>\n      </BodyText>\n    </Section>\n  );\n}\n","import React from 'react';\nimport { BodyText } from 'cabana-react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\n\nimport Section, { SectionHeading, SubHeading } from '../../components/Section';\n\nexport default function Styling(props) {\n  return (\n    <Section id={props.title}>\n      <SectionHeading>Styling</SectionHeading>\n      <BodyText>\n        Usually most style decisions will be made by your designer - and if they're also using the{' '}\n        <a href=\"https://cabanadesignsystem.com\">Cabana Sketch Library</a>, these styles will have been set up in the\n        library. The library file is similar to a 'config' file for developers. It contains most of the main definitions\n        of visual styles including:\n        <ul>\n          <li>Color pallete</li>\n          <li>Fonts, sizes, weights and colors</li>\n          <li>Different drop shadow styles</li>\n        </ul>\n        These are set in the <HashLink to=\"#Theming\">theme file</HashLink>\n      </BodyText>\n    </Section>\n  );\n}\n","import React from 'react';\nimport { Box, TextInput, Card, CardBodyText, CardImage, Button, HeadingFour, SmallText } from 'cabana-react';\n\nimport Section, { SectionHeading, SubHeading, SectionGrid, P, TextLink, Blockquote } from '../../components/Section';\nimport CodeExample from '../../components/CodeExample';\n\nconst ButtonPrimary = props => <Button bg=\"tertiary\" fontWeight=\"bold\" {...props} />;\nconst AdBox = props => <Box p={1} border=\"1px solid\" borderColor=\"tertiary\" {...props} />;\nconst Callout = props => (\n  <P\n    border=\"1px solid\"\n    borderColor=\"tertiary\"\n    px={2}\n    py={2}\n    borderRadius=\"small\"\n    bg=\"tertiary\"\n    color=\"white\"\n    {...props}\n  />\n);\n\nexport default function BestPractices(props) {\n  return (\n    <Section id={props.title}>\n      <SectionHeading>Best Practices</SectionHeading>\n      <SubHeading my={1}>1. Communicate with your Designer!</SubHeading>\n      <P color=\"grey\" mb={2}>\n        (...or designers - communicate with your devs... early!)\n      </P>\n      <P>\n        The beauty of Cabana is that the system is built in a way that brings the designer and the developer closer\n        together. Instead of speaking in <em>attributes</em> (like font size, color value, pixel widths), you speak in{' '}\n        <em>components</em> and <em>units</em> (like Hero text, Body text, primary color, and units of padding).\n      </P>\n      <P>\n        Spacing is a good example - Cabana is built on the{' '}\n        <TextLink href=\"https://spec.fm/specifics/8-pt-grid\" target=\"_blank\">\n          8pt grid system\n        </TextLink>{' '}\n        and is set up in code to measure units in multiples of 8. In this way, a designer who may choose to use 32px of\n        padding can easily communicate that it's \"4 units\" of padding.\n      </P>\n      <Card display=\"flex\">\n        <SectionGrid>\n          <CodeExample>{`const theme = {\n    space: [0, 8, 16, 24, 32],\n};\n// 32px padding\n<TextInput p={4} />`}</CodeExample>\n          <TextInput p={3} placeholder=\"Input Text\" mt={2} width=\"150px\" />\n        </SectionGrid>\n        <SectionGrid>\n          <img src={require('../../images/input_metrics.png')} style={{ maxWidth: '100%' }} />\n        </SectionGrid>\n      </Card>\n      <Callout my={2}>\n        Tip: you can also change the pixel units to be based on any scale you want. They don't even need to be multiples\n        of the same number.\n      </Callout>\n      <P>\n        In early stages of design – Designers and Devs should keep an open dialogue about the product's overall visual\n        style, metaphors and heirarchy of components.\n      </P>\n      <Blockquote>\n        Here's the color palette, here are the base font sizes for each level, here are the different border radii and\n        here is the spacing scale.\n      </Blockquote>\n      <SubHeading>2. Define your own components</SubHeading>\n      <P>\n        In many cases, you'll end up customising the Cabana components to have a certain visual style. To save yourself\n        from duplicating the props that define the visual style, it's recommended that you create your own instances of\n        Cabana's base \"Primitives\" and then use these in your apps.\n      </P>\n\n      <HeadingFour>Example:</HeadingFour>\n      <Card display=\"flex\" bg=\"darkGrey\">\n        <SectionGrid>\n          <CodeExample>{`import { Box, Button, SmallText } from 'cabana-react';\n\nconst ButtonPrimary = props => <Button bg=\"tertiary\" fontWeight=\"bold\" color=\"white\" {...props} />;\nconst AdBox = props => <Box p={1} border=\"1px solid\" borderColor=\"tertiary\" {...props} />;\n\nconst App = () => (\n    <AdBox display=\"flex\">\n        <SmallText color=\"tertiary\">Please click this button to see a jack in the box.</SmallText>\n        <ButtonPrimary>Boinggg!</ButtonPrimary>\n    </AdBox>\n)\n            `}</CodeExample>\n        </SectionGrid>\n        <SectionGrid>\n          <AdBox display=\"flex\">\n            <SmallText color=\"tertiary\">Please click this button to see a jack in the box.</SmallText>\n            <ButtonPrimary ml={1}>Boinggg!</ButtonPrimary>\n          </AdBox>\n        </SectionGrid>\n      </Card>\n      <SubHeading my={4}>3. Core styles inside, variant styles outside</SubHeading>\n      <P>\n        Remember that Cabana is a design system. The system is based around <em>constraints</em>. A good way of\n        'enforcing' those constraints is to internally set the 'core' or 'fixed' style properties. Of course, to not be{' '}\n        <em>too restrictive</em>, you can still let the developer override / customise props easily from the outside.\n      </P>\n      <Callout>\n        When deciding which props to set in your component definition and which to pass in as props, try to think about\n        your component's API from the perspective of <em>\"which props are fixed?\"</em> and{' '}\n        <em>which props will our design system let the designer/developer decide case-by-case?\"</em>\n      </Callout>\n      <Blockquote>\n        Designer: Our cards can have one alternative background color - the default is white and when it's inactive, it\n        is grey.\n      </Blockquote>\n\n      <CodeExample>\n        {`import { Card } from 'cabana-react'; \n\nconst MyCard = props => <Card boxShadow=\"large\" bg={props.bg} />;\n\nMyCard.defaultProps = {\n    bg: \"white\",\n};\n\n// Now the developer can set the bg color based on the isInactive prop\n<MyCard bg={isInactive && 'lightGrey'} />\n\n// Alternative - here the card would need to handle the isActive prop internally\n<MyCard isActive={false} />\n            `}\n      </CodeExample>\n      <Box display=\"grid\" style={{ gridTemplateColumns: '1fr 1fr 1fr', gridColumnGap: '20px' }} mt={2}>\n        <Card>\n          <CardImage src=\"https://tinyurl.com/yc9dz9xu\" />\n          <CardBodyText>Active (default)</CardBodyText>\n        </Card>\n        <Card bg=\"lightGrey\">\n          <CardImage src=\"https://tinyurl.com/yc9dz9xu\" />\n          <CardBodyText>Inactive</CardBodyText>\n        </Card>\n      </Box>\n      <P mt={4}>\n        This is a simplified example, but it illustrates the recommended practice of choosing what options to 'expose'\n        in your component's API and how that relates to the rules set in the design system.\n      </P>\n    </Section>\n  );\n}\n","import React from 'react';\nimport Section, { SectionHeading, P, Code, TextLink } from '../../components/Section';\nimport CodeExample from '../../components/CodeExample';\nimport { HashLink as Link } from 'react-router-hash-link';\nexport default function Theming(props) {\n  return (\n    <Section id={props.title}>\n      <SectionHeading>Theming</SectionHeading>\n      <P>\n        Most visual style properties are set in one central location of your code; the <Code>theme.js</Code> file. This\n        file is the code equivalent of your Cabana Sketch Library file.\n      </P>\n      <P>\n        Under the hood, Cabana uses the <Code>ThemeProvider</Code> from styled-components and the theme properties set\n        in <TextLink href=\"https://github.com/jxnblk/styled-system\">styled-system</TextLink>. You're free to expand upon\n        this how ever you like though!\n      </P>\n      <CodeExample>{`import { ThemeProvider } from 'styled-components';\n\nconst myTheme = {\n    space: [0, 8, 15, 24, 32],\n    colors: {\n        primary: '#5450F7',\n        secondary: '#25a9ce',\n        tertiary: '#EF476F',\n        black: '#303133',\n        grey: '#8D8D8F',\n        lightGrey: '#DADADA',\n        darkGrey: '#303133',\n        success: '#44A45F',\n        warning: '#FCEB3B',\n        error: '#E6173E',\n        white: '#ffffff',\n    },\n}\n\nconst App = () => (\n    <ThemeProvider theme={myTheme}>\n        <Button bg=\"primary\" color=\"secondary\" p={2}>Styled Button!</Button>\n    </ThemeProvider>\n);\n`}</CodeExample>\n      <P mt={2}>\n        You can find the source file for the default theme object{' '}\n        <Link to=\"https://github.com/lucastobrazil/cabana-react\">on Github</Link>\n      </P>\n    </Section>\n  );\n}\n","import React from 'react';\nimport { Box, LeadText } from 'cabana-react';\nimport Section from '../../components/Section';\nimport styled from 'styled-components';\nimport GettingStarted from './GettingStarted';\nimport Styling from './Styling';\nimport BestPractices from './BestPractices';\nimport Theming from './Theming';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst TopNavItem = styled(Box)`\n  transition: all 350ms;\n  text-decoration: none;\n  &:hover {\n    background-color: #fafafa;\n    box-shadow: 0 16px 24px rgba(48, 49, 51, 0.2);\n  }\n`;\n\nTopNavItem.defaultProps = {\n  boxShadow: 100,\n  bg: 'white',\n  border: '1px solid',\n  borderColor: 'transparent',\n  borderRadius: 'small',\n  color: 'primary',\n  py: 2,\n  textAlign: 'center',\n  is: Link,\n  fontWeight: 'bold'\n};\n\nconst sections = [\n  { url: 'GettingStarted', name: 'Getting Started' },\n  { url: 'Styling', name: 'Styling' },\n  { url: 'Theming', name: 'Theming' },\n  { url: 'BestPractices', name: 'Best Practices' },\n];\n\nexport default function Guides() {\n  return (\n    <React.Fragment>\n      <Section>\n        <LeadText mb={4}>Guides</LeadText>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr 1fr 1fr',\n            gridColumnGap: 16,\n            gridRowGap: 16,\n          }}\n        >\n          {sections.map((item, key) => (\n            <TopNavItem key={key} to={`#${item.url}`} children={item.name} />\n          ))}\n        </div>\n      </Section>\n      <GettingStarted title={sections[0].url} />\n      <Styling title={sections[1].url} />\n      <Theming title={sections[2].url} />\n      <BestPractices title={sections[3].url} />\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}